{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/dalecottrell/Desktop/desktop-keep/my-portfolio2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/dalecottrell/Desktop/desktop-keep/my-portfolio2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/Users/dalecottrell/Desktop/desktop-keep/my-portfolio2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/Users/dalecottrell/Desktop/desktop-keep/my-portfolio2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/Users/dalecottrell/Desktop/desktop-keep/my-portfolio2.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Grabber = void 0;\n\nvar Utils_1 = require(\"../../../Utils\");\n\nvar Enums_1 = require(\"../../../Enums\");\n\nvar ExternalInteractorBase_1 = require(\"../../../Core/ExternalInteractorBase\");\n\nvar Grabber = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Grabber, _ExternalInteractorBa);\n\n  function Grabber(container) {\n    _classCallCheck(this, Grabber);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Grabber).call(this, container));\n  }\n\n  _createClass(Grabber, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      var container = this.container,\n          mouse = container.interactivity.mouse,\n          events = container.actualOptions.interactivity.events;\n      return events.onHover.enable && !!mouse.position && Utils_1.isInArray(Enums_1.HoverMode.grab, events.onHover.mode);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function interact() {\n      var _a;\n\n      var container = this.container,\n          options = container.actualOptions,\n          interactivity = options.interactivity;\n\n      if (interactivity.events.onHover.enable && container.interactivity.status === Utils_1.Constants.mouseMoveEvent) {\n        var mousePos = container.interactivity.mouse.position;\n\n        if (!mousePos) {\n          return;\n        }\n\n        var distance = container.retina.grabModeDistance,\n            query = container.particles.quadTree.queryCircle(mousePos, distance);\n\n        var _iterator = _createForOfIteratorHelper(query),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var particle = _step.value;\n            var pos = particle.getPosition(),\n                pointDistance = Utils_1.getDistance(pos, mousePos);\n\n            if (pointDistance <= distance) {\n              var grabLineOptions = interactivity.modes.grab.links,\n                  lineOpacity = grabLineOptions.opacity,\n                  opacityLine = lineOpacity - pointDistance * lineOpacity / distance;\n\n              if (opacityLine <= 0) {\n                continue;\n              }\n\n              var optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : particle.options.links.color;\n\n              if (!container.particles.grabLineColor) {\n                var linksOptions = options.interactivity.modes.grab.links;\n                container.particles.grabLineColor = Utils_1.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n              }\n\n              var colorLine = Utils_1.getLinkColor(particle, undefined, container.particles.grabLineColor);\n\n              if (!colorLine) {\n                return;\n              }\n\n              container.canvas.drawGrabLine(particle, colorLine, opacityLine, mousePos);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n  }]);\n\n  return Grabber;\n}(ExternalInteractorBase_1.ExternalInteractorBase);\n\nexports.Grabber = Grabber;","map":null,"metadata":{},"sourceType":"script"}